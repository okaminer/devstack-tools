#!/bin/bash
#
# This script tweaks the tempest config files slightly
# this helps account for settings that may not be exposed via devstack

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$( cd "$( dirname "${SCRIPT_DIR}" )" && pwd )"

function set_value_if_unset {
  local file=$1
  local section=$2
  local option=$3
  local value=$4

  VAL=`iniget "${file}" "${section}" "${option}"`
  if [ -z "${VAL}" ]; then
    # it is not set, set it
    iniset "${file}" "${section}" "${option}" "${value}"
  fi
}

function restart_service {
  local service=$1
  echo "Restarting: ${service}"
  sudo systemctl restart devstack@${service}
}


DEVSTACK_DIR=${DEVSTACK_DIR:-/git/devstack}
if [ ! -d "${DEVSTACK_DIR}" ]; then
  echo "Unable to find the devstack directory"
  echo "Please export it as the DEVSTACK_DIR environment variable"
  exit 1
fi

# devstack contains some handy code to manipulate ini files
source "${DEVSTACK_DIR}/inc/ini-config"

# set the directory where the code is
TEMPEST_CONF="/opt/stack/tempest/etc/tempest.conf"
GLANCE_UWSGI_CONF="/etc/glance/glance-uwsgi.ini"

# ensure the file exists
if [ ! -f "${TEMPEST_CONF}" ]; then
   echo "The tempest config file does not seem to exist!"
   exit 1
fi

# the newton version of devstack does not support setting some values in tempest.conf
# so we will set them here
set_value_if_unset "${TEMPEST_CONF}" volume volume_size 8
set_value_if_unset "${TEMPEST_CONF}" volume disk_format qcow2
set_value_if_unset "${TEMPEST_CONF}" volume-feature-enabled manage_snapshot False
set_value_if_unset "${TEMPEST_CONF}" volume-feature-enabled manage_volume False
set_value_if_unset "${TEMPEST_CONF}" compute-feature-enabled live_migrate_back_and_forth False
set_value_if_unset "${TEMPEST_CONF}" compute-feature-enabled block_migration_for_live_migration False
set_value_if_unset "${TEMPEST_CONF}" compute-feature-enabled live_migration True

if [ ! -f "${GLANCE_UWSGI_CONF}" ]; then
   echo "The glance wsgi config file does not seem to exist!"
   exit 1
else
   # set the socket-timeout (workaround for pike and )
   # https://bugs.launchpad.net/glance/+bug/1703856
   iniset "${GLANCE_UWSGI_CONF}" "uwsgi" "socket-timeout" "600"
   restart_service "g-api"
   restart_service "g-reg"
fi

# make sure that partprobe is included in the rootwrap filters
NOVA_ROOTWRAP="/etc/nova/rootwrap.d/scaleio.filters"
if [ ! -f "${NOVA_ROOTWRAP}" ]; then
  sudo cp "${PROJECT_DIR}/files/rootwrap.d/nova/scaleio.filters" "${NOVA_ROOTWRAP}"
  restart_service "n-cpu"
fi

# make the necessary flavors
# scaleio image backend only supports disks in multiples of 8GB
#openstack flavor create TEMPEST_REF --id 100 --ram 512 --disk 8 --vcpus 1
#openstack flavor create TEMPEST_REF_ALT --id 101 --ram 512 --disk 16 --vcpus 1
