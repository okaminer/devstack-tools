#!/bin/bash
#
# script meant to test out functinality of ScaleIO Cinder Driver
#
# Supported Operations (as of Newton)
# - Create, delete, clone, attach, detach, manage, and unmanage volumes
# - Create, delete, manage, and unmanage volume snapshots
# - Create a volume from a snapshot
# - Copy an image to a volume
# - Copy a volume to an image
# - Extend a volume
# - Get volume statistics
# - Create, list, update, and delete consistency groups
# - Create, list, update, and delete consistency group snapshots

# command line operations
CREATE="false"
DELETE="false"

CMD_OPTS="--os-username admin --os-tenant-name admin"

# Volume Types
SIO_VOLUME_TYPE_THIN="ScaleIO-Thin"
SIO_VOLUME_TYPE_THICK="ScaleIO-Thick"
SIO_VOLUME_TYPE_SNAPSHOT_SOURCE="ScaleIO-Snapshot-Source"
NUM_VOLUMES=2
NUM_SNAPSHOTS=10

function setup {
  openstack quota set --volumes -1 ${OS_PROJECT_NAME}
  openstack quota set --snapshots -1 ${OS_PROJECT_NAME}
}

function show-volume-types {
  openstack volume type list
}

function create-volume-types {

  # thin
  openstack volume type create "${SIO_VOLUME_TYPE_THIN}" $CMD_OPTS
  openstack volume type set --property volume_backend_name=scaleio "${SIO_VOLUME_TYPE_THIN}" $CMD_OPTS
  openstack volume type set --property provisioning:type=thin "${SIO_VOLUME_TYPE_THIN}" $CMD_OPTS

  # thick
  openstack volume type create "${SIO_VOLUME_TYPE_THICK}" $CMD_OPTS
  openstack volume type set --property volume_backend_name=scaleio "${SIO_VOLUME_TYPE_THICK}" $CMD_OPTS
  openstack volume type set --property provisioning:type=thick "${SIO_VOLUME_TYPE_THICK}" $CMD_OPTS

  # snapshot type
  openstack volume type create "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" $CMD_OPTS
  openstack volume type set --property volume_backend_name=scaleio "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" $CMD_OPTS
  openstack volume type set --property provisioning:type=thick "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" $CMD_OPTS
}

function delete-volume-types {

  # thin
  openstack volume type delete "${SIO_VOLUME_TYPE_THIN}" $CMD_OPTS
  # thick
  openstack volume type delete "${SIO_VOLUME_TYPE_THICK}" $CMD_OPTS
  # snapshot
  openstack volume type delete "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" $CMD_OPTS

}

# create some volumes
# NOTE: SCaleIO created volumes in size multiples of 8GB, asking for 1GB gets you 8GB
#
function create-volumes {
  # thin
  for a in $(seq $NUM_VOLUMES); do
    openstack volume create --type "${SIO_VOLUME_TYPE_THIN}" --size 1 thin-volume-$a
  done

  # thick
  for a in $(seq $NUM_VOLUMES); do
    openstack volume create --type "${SIO_VOLUME_TYPE_THICK}" --size 1 thick-volume-$a
  done
}

function create-snapshots {
  openstack volume create --type "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" --size 8 snapshot-source
  for a in $(seq $NUM_SNAPSHOTS); do
    openstack volume snapshot create --volume snapshot-source snapshot-$a
  done
}

function delete-volumes {
  # iterate through all the types and delete all the volumes
  for T in "${SIO_VOLUME_TYPE_SNAPSHOT_SOURCE}" "${SIO_VOLUME_TYPE_THIN}" "${SIO_VOLUME_TYPE_THICK}"; do
    echo "Looking for volumes of type: ${T}"
    # the thin volumes
    while read line
    do
      # openstack volume delete thin-volume
      VOL=`echo "${line}" | awk -F',' '{print $1}'`
      echo "Deleting ${T} volume: $VOL"
      openstack volume delete $VOL
    done < <(openstack volume list -f csv --long --quote minimal | grep "${T}")
  done
}

function delete-snapshots {
  # iterate through and delete all the snapshots
  echo "Looking for snapshots"
  while read line
  do
    # openstack volume delete thin-volume
    SNAP=`echo "${line}" | awk -F',' '{print $1}'`
    echo "Deleting snapshot: $SNAP"
    openstack volume snapshot delete $SNAP
  done < <(openstack volume snapshot list -f csv --long --quote minimal)
} 

#
# Main script logic starts here
#
while getopts "cd" opt; do
  case $opt in
    c)
      CREATE="true"
      ;;
    d)
      DELETE="true"
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done


if [ "${CREATE}" == "true" ]; then
  setup
  create-volume-types
  show-volume-types
  create-volumes
  create-snapshots
fi


if [ "${DELETE}" == "true" ]; then
  delete-snapshots
  delete-volumes
  delete-volume-types
fi
