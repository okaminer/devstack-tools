#!/bin/bash
#
# Script to setup cinder as backend to glance

OPENSTACK_RELEASE=${OPENSTACK_RELEASE:-master}
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$( cd "$( dirname "${SCRIPT_DIR}" )" && pwd )"
IMAGE_EXT="$$"

CURRENT_IMAGES=`openstack image list -f csv --long --quote minimal | grep cirros`
echo "${CURRENT_IMAGES}"

# remove the existing images
while read line
do
  IMAGE=`echo "${line}" | awk -F',' '{print $1}'`
  NAME=`echo "${line}" | awk -F',' '{print $2}'`
  echo "Downloading $IMAGE as $NAME.${IMAGE_EXT)}"
  glance image-download --file "${NAME}.${IMAGE_EXT}" "${IMAGE}"
  echo "Deleting image: $IMAGE"
  openstack image delete $IMAGE
done < <(echo "${CURRENT_IMAGES}")

# setup cinder as backend to Glance
pip install python-cinderclient os-brick oslo.rootwrap
if [ ! -d "/etc/glance/rootwrap.d" ]; then
  sudo mkdir -p "/etc/glance/rootwrap.d"
fi
sudo cp "${PROJECT_DIR}/files/glance/${OPENSTACK_RELEASE}/glance_sudoers" "/etc/sudoers.d"
sudo cp "${PROJECT_DIR}/files/glance/${OPENSTACK_RELEASE}/glance_rootwrap.conf" "/etc/glance/rootwrap.conf"
sudo cp "${PROJECT_DIR}/files/glance/${OPENSTACK_RELEASE}/scaleio.glance.filters" "/etc/glance/rootwrap.d"
sudo sed -i -e "s|^#stores.*|stores=cinder|g" /etc/glance/glance-api.conf
sudo sed -i -e "s|^#default_store.*|default_store=cinder|g" /etc/glance/glance-api.conf

echo "Restarting glance-api"
sudo systemctl restart devstack@g-api

# recreate the images
while read line
do
  NAME=`echo "${line}" | awk -F',' '{print $2}'`
  echo "Uploading $NAME.image as $NAME"
  openstack image create --public \
                         --container-format bare \
                         --disk-format qcow2 \
                         --file "${NAME}.${IMAGE_EXT}" \
                         "${NAME}"
  rm "${NAME}.${IMAGE_EXT}"
done < <(echo "${CURRENT_IMAGES}")
